install.packages("mlr3")
install.packages("mlr3learners")
install.packages("mlr3extralearners")
library(mlr3)
mlr_learners
library(mlr3)
mlr_learners
mlr3learners::LearnerClassifCVGlmnet
devtools::install_github("mlr-org/mlr3extralearners")
library(mlr3extralearners)
list_mlr3learners()
install.packages("mlr3proba")
install.packages("mlr3proba")
remotes::install_github("mlr-org/mlr3proba")
install.packages("mlr3proba", repos = "https://mlr-org.r-universe.dev")
lrn('regr.gbm')
library(mlr3)
lrn('regr.gbm')
install_learners("regr.gbm")
library(mlr3extralearners)
lrn('regr.gbm')
list_mlr3learners(select = c("id", "required_packages"))
list_mlr3learners(select = c("id", "required_packages"), fill=T)
rf <- lrn('classif.rfsrc')
rf$param_set
lrn("surv.rfsrc")
library(mlr3proba)
remove.packages("mlr3proba", lib="~/R/x86_64-pc-linux-gnu-library/4.0")
list_mlr3learners(select = c("id", "required_packages"))
?install.packages()
install.packages("mlr3", dependencies = T)
install.packages("mlr3", dependencies = T)
install.packages("mlr3", dependencies = T)
install.packages("mlr3", dependencies = T)
install.packages("mlr3", dependencies = T)
install.packages("mlr3", dependencies = T)
remotes::install_github("mlr-org/mlr3proba")
options(repos=c(
mlrorg = 'https://mlr-org.r-universe.dev',
raphaels1 = 'https://raphaels1.r-universe.dev',
CRAN = 'https://cloud.r-project.org'
))
install.packages("mlr3proba")
getwd()
getwd()
install.packages("mlr3proba")
install.packages("mlr3viz")
install.packages("mlr3proba")
library(mlr3proba)
mlr_learners
library(mlr3extralearners)
mlr_learners
rf <- lrn('classif.rfsrc')
rf$param_set
srf <- lrn("surv.rfsrc")
srf$param_set
devtools::install_github("mlr-org/mlr3cluster")
install.packages("mlr3")
library(mlr3)
f <- lrn('classif.rfsrc')
devtools::install_github("mlr-org/mlr3extralearners")
library(mlr3extralearners)
list_mlr3learners()
install.packages("apcluster")
list_mlr3learners()
library(mlr3proba)
mlr_learners
x <- lrn('classif.rfsrc')
x$param_set
getOption("rsconnect.max.bundle.size")
install.packages("plumber")
install.packages("plumber")
print("sd")
install.packages("plumber")
install.packages("plumber")
install.packages("plumber")
shiny::runApp('/media/behnam/AD9E-6696/Documents/Statistics-THC/CCTA_last/CTAmod')
runApp('/media/behnam/AD9E-6696/Documents/Statistics-THC/CCTA_last/CTAmod')
setwd("/media/behnam/AD9E-6696/CTAMACE")
runApp('/media/behnam/AD9E-6696/Documents/Statistics-THC/CCTA_last/CTAmod')
setwd("/media/behnam/AD9E-6696/CTAmod")
setwd("/media/behnam/AD9E-6696/Documents/Statistics-THC/CCTA_last/CTAmod/")
runApp()
runApp(appDir = "/media/behnam/AD9E-6696/Documents/Statistics-THC/CCTA_last/CTAmod/")
setwd("/media/behnam/AD9E-6696/Documents/Statistics-THC/CCTA_last/CTAmod/")
runApp(appDir = "/media/behnam/AD9E-6696/Documents/Statistics-THC/CCTA_last/CTAmod/")
?h2o.init
?h2o.loadModel()
runApp()
setwd("/media/behnam/AD9E-6696/Documents/Statistics-THC/CCTA_last/CTAmod/www")
runApp('/media/behnam/AD9E-6696/Documents/Statistics-THC/CCTA_last/CTAmod')
xgboost_model <- h2o.loadModel("xgb_grid1_model_38")
runApp('/media/behnam/AD9E-6696/Documents/Statistics-THC/CCTA_last/CTAmod')
runApp('/media/behnam/AD9E-6696/Documents/Statistics-THC/CCTA_last/CTAmod')
runApp('/media/behnam/AD9E-6696/Documents/Statistics-THC/CCTA_last/CTAmod')
runApp('/media/behnam/AD9E-6696/Documents/Statistics-THC/CCTA_last/CTAmod')
runApp('/media/behnam/AD9E-6696/Documents/Statistics-THC/CCTA_last/CTAmod')
runApp()
runApp('/media/behnam/AD9E-6696/Documents/Statistics-THC/CCTA_last/CTAmod')
?bslib::bs_theme()
runApp('/media/behnam/AD9E-6696/Documents/Statistics-THC/CCTA_last/CTAmod')
runApp('/media/behnam/AD9E-6696/Documents/Statistics-THC/CCTA_last/CTAmod')
runApp('/media/behnam/AD9E-6696/Documents/Statistics-THC/CCTA_last/CTAmod')
runApp('/media/behnam/AD9E-6696/Documents/Statistics-THC/CCTA_last/CTAmod')
runApp()
runApp('/media/behnam/AD9E-6696/Documents/Statistics-THC/CCTA_last/CTAmod')
packageVersion("shiny")
packageVersion("h2o")
library("h2o")
packageVersion("h2o")
h2o.init()
install.packages("h2o")
install.packages("h2o")
library("RCurl")
install.packages("h2o")
